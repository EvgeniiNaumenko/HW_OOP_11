#pragma once
#include "MyString.h"

//Описати клас «Бітовий рядок» похідний від класу «Рядок»(Рядки цього класу можуть містити тільки символи
//	0 і 1).Якщо в основі рядка, який ініціалізує зустрінуться
//	будь - які символи, відмінні від допустимих, то «Бітовий
//	рядок» стає порожнім.
// 
//  Вміст рядка розглядається як
//	двійкове подання цілого числа зі знаковим розрядом.
//	Негативні числа зберігаються в додатковому коді.
// 
//	Методи:
//1) конструктор без параметрів;
//2) конструктор, що приймає як параметр C - рядок;
//3) конструктор копіювання;
//4) оператор присвоєння;
//5) деструктор;
//6) зміна знаку числа(переклад числа в додатковий код).
//7) складання бітових рядків(перевантажити оператори
//+ і += );
//8) перевірка на рівність(== ) і на нерівність(!= ).


class BinString: public MyString
{
public:
	BinString();							//1) конструктор без параметрів;
	BinString(const char*);						//2) конструктор, що приймає як параметр C - рядок;
	BinString(const BinString&);			//3) конструктор копіювання;
	BinString& operator=(const BinString&);		//4) оператор присвоєння;
	~BinString();							//5) деструктор;
	void changeSign();						//6) зміна знаку числа(переклад числа в додатковий код).
	BinString operator+(const BinString&);	//7) складання бітових рядків(перевантажити оператори
	BinString operator+=(const BinString&);	//+ і += );
	bool operator==(const BinString&);		//8) перевірка на рівність(== ) і на нерівність(!= ).
	bool operator!=(const BinString&);
};

